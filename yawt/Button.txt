package javaAP.yawt;


import java.awt.Font;
import java.awt.Color;
import java.awt.Graphics2D;

import java.awt.font.TextLayout;

import java.awt.geom.RoundRectangle2D;

import javaAP.util.Point;


public class Button extends Component
{
	private boolean depressed = false;
	private boolean sizechanged;
	
	private String label = "";
		public void label_set(String in) { label = in; sizechanged = true; }
		public String label_get()		 { return label; }
		
	private Font font = null;
		public void font_set(String in) { font = Font.decode(in); sizechanged = true; }
		public void font_set(Font in)	{ font = in; sizechanged = true; }
		public Font font_get()			{ return font; }
		public String fontname_get()	{ return font.getFontName(); }
		
	private Color color = Color.lightGray;
		public void color_set(Color in)	{ color = in; }
		public Color color_get()		{ return color; }
		
    private Color background_depressed = Color.darkGray;
    	public void inverse_color_set(Color in)		{ background_depressed = in; }
    	public Color inverse_color_get()			{ return background_depressed; }
    	
    private Color textcolor = Color.black;
    	public void textcolor_set(Color in) 	{ textcolor = in; }
    	public Color textcolor_get()			{ return textcolor; }
    	
    private Color textcolor_depressed = Color.white;
    	public void inverse_textcolor_set(Color in)		{ textcolor_depressed = in; }
    	public Color inverse_textcolor_get()			{ return textcolor_depressed; }
	
    
	// ************
	// Constructors
	// ************
	
    public Button(Point p, String textin)
    {
        this.put(p);
        
        this.set("label", textin);
        this.set("font", "Arial-bold");
    }
    
    public Button(int xin, int yin, String textin)
    {
        this(new Point(xin, yin), textin);
    }
    
    
    // **************
    // Event Handlers
    // **************
    
    public void this_held(Point p, String button) 		{ this.depressed = true; }
    public void this_released(Point p, String button)	{ this.depressed = false; }
    
    public void draw(Graphics2D pen)
    {
        if(sizechanged)
        {
            TextLayout layout = new TextLayout(label, font, pen.getFontRenderContext());
            this.size((int) layout.getBounds().getWidth() + 20, (int) layout.getBounds().getHeight() + 20);
        }
        
        String pressed = depressed ? "inverse-" : "";
        
        pen.setColor(this.get(Color.class, pressed + "color"));
        pen.fill(new RoundRectangle2D.Double(this.x, this.y, this.width, this.height, 25, 25));
        
        pen.setColor(this.get(Color.class, pressed + "textcolor"));
        pen.setFont(font);
        pen.drawString(label, this.x + 10, this.y + 18);
    }
}